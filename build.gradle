plugins {
    id 'java'
    id 'application'
}

task buildWithDependencies(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.beanbeanjuice.main.BeanBot'
    }

    from {
        configurations.runtimeClasspath.findAll { !it.path.endsWith(".pom") }.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}

group 'com.beanbeanjuice'
mainClassName = 'com.beanbeanjuice.main.BeanBot'
version '1.0.5'

repositories {

    // Central Maven repository.
    mavenCentral()

    // Repository used for the DiscordJDA.
    jcenter()

    maven {
        url 'https://jitpack.io'
    }

}

dependencies {

    // JUnit, for unit testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // Jetbrains Annotations.
    implementation 'org.jetbrains:annotations:20.1.0'

    // Discord JDA, for Discord things.
    implementation 'net.dv8tion:JDA:4.2.0_168'

    // Twitch Connections
    implementation 'com.github.twitch4j:twitch4j:1.2.0'

    // Lava Player
    implementation 'com.sedmelluq:lavaplayer:1.3.73'

    // Spotify API
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:6.5.2'

    // Web Utils
    implementation 'me.duncte123:botCommons:2.0.122'

    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'

    // Logback
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // SQL Connection.
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2'
}

test {
    useJUnitPlatform()
}